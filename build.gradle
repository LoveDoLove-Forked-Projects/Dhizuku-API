// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '8.0.1' apply false
    id 'com.android.library' version '8.0.1' apply false
    id 'org.jetbrains.kotlin.android' version '1.8.10' apply false
}

ext {
    groupId = "io.github.iamr0s"
    artifactId = "Dhizuku-API"
    artifactVersion = "2.0"
    POM_NAME = "Dhizuku API"
    POM_DESCRIPTION = "API of Dhizuku."
    POM_URL = "https://github.com/iamr0s/Dhizuku-API"
    POM_SCM_URL = "https://github.com/iamr0s/Dhizuku-API"
    POM_SCM_CONNECTION = "scm:git@github.com:iamr0s/Dhizuku-API.git"
    POM_SCM_DEV_CONNECTION = "scm:git@github.com:iamr0s/Dhizuku-API.git"

    POM_LICENCE_NAME = "MIT License"
    POM_LICENCE_URL = "https://github.com/iamr0s/Dhizuku-API/blob/main/LICENSE"
    POM_LICENCE_DIST = "repo"

    POM_DEVELOPER_ID = "iamr0s"
    POM_DEVELOPER_NAME = "iamr0s"
    POM_DEVELOPER_URL = "https://github.com/iamr0s"
}

String rootPath = rootDir.path

def apiModuleName = ":dhizuku-api"
def hasApiModule = false
for (p in getAllprojects()) {
    if (p.name == apiModuleName) {
        hasApiModule = true
        break
    }
}
if (!hasApiModule) return
project(":dhizuku-api") {
    afterEvaluate {
        String extGradlePath = "$rootPath/keystore/r0s.gradle"
        if (!file(extGradlePath).exists()) return
        apply from: extGradlePath

        plugins.apply('maven-publish')
        plugins.apply('signing')

        android {
            publishing {
                singleVariant("release") {
                    withSourcesJar()
                    withJavadocJar()
                }
            }

            sourceSets {
                main {
                    aidl.srcDir("../dhizuku-aidl/src/main/aidl")
                    java.srcDir("../dhizuku-shared/src/main/java")
                    java.srcDir("../dhizuku-api-impl/src/main/java")
                }
            }
        }

        publishing {
            publications {
                mavenJava(MavenPublication) {
                    group rootProject.groupId
                    artifactId rootProject.artifactId
                    version rootProject.artifactVersion
                    afterEvaluate {
                        from components.release
                    }
                    pom {
                        name = rootProject.POM_NAME
                        description = rootProject.POM_DESCRIPTION
                        url = rootProject.POM_URL
                        licenses {
                            license {
                                name = rootProject.POM_LICENCE_NAME
                                url = rootProject.POM_LICENCE_URL
                            }
                        }
                        developers {
                            developer {
                                name = rootProject.POM_DEVELOPER_NAME
                                url = rootProject.POM_DEVELOPER_URL
                            }
                        }
                        scm {
                            connection = rootProject.POM_SCM_CONNECTION
                            url = rootProject.POM_SCM_URL
                        }
                    }
                }
            }
            repositories {
                maven {
                    name 'ossrh'
                    url 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
                    credentials {
                        username ossrhUsername
                        password ossrhPassword
                    }
                }
            }
        }

        signing {
            sign publishing.publications.mavenJava
        }
    }
}